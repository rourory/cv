"use strict";(self.webpackChunkcv=self.webpackChunkcv||[]).push([[349],{349:(a,e,o)=>{o.r(e),o.d(e,{default:()=>i});const i={footerHeader:"Kontakt",buttonsGoBack:"Wstecz",buttonsFrontend:"Frontend",buttonsBackend:"Backend",buttonsViewProject:"Zobacz projekt",buttonsPrivateProject:"Prywatny",infoJsHeader:"JavaScript",infoJavaHeader:"Java",infoAdditionalHeader:"Dodatkowe umiej\u0119tno\u015bci",infoLanguagesHeader:"J\u0119zyki",infoJsContent:"JavaScript jest dla mnie g\u0142\xf3wnym j\u0119zykiem frontendowym. U\u017cywam go zar\xf3wno do tworzenia aplikacji webowych z wykorzystaniem nowoczesnych framework\xf3w takich jak React.js, jak i do tworzenia aplikacji desktopowych w Electron.js. Dobrze rozumiem jego dynamiczn\u0105 natur\u0119, zamkni\u0119cia, asynchroniczno\u015b\u0107 i specyfik\u0119 dzia\u0142ania silnika. Pracowa\u0142em z natywnym JS oraz z TypeScript i regularnie wykorzystuj\u0119 go do tworzenia responsywnych, interaktywnych i adaptacyjnych interfejs\xf3w.",infoJavaContent:"Java to jeden z pierwszych j\u0119zyk\xf3w, z kt\xf3rymi zacz\u0105\u0142em pracowa\u0107. Znam zasady programowania obiektowego, system budowania Gradle oraz ekosystem Spring. U\u017cywam Javy do tworzenia backendu, budowania REST API i pracy z bazami danych przez JPA. Ceni\u0119 stabilno\u015b\u0107 i silne typowanie tego j\u0119zyka.",infoAdditionalContent:"Posiadam pewne umiej\u0119tno\u015bci pracy w \u015brodowiskach Visual Studio Code, IntelliJ IDEA i Visual Studio\xa02022. Mam do\u015bwiadczenie z programami do modelowania 3D, takimi jak SketchUp i Blender. Znam podstawowe etapy przygotowania zestaw\xf3w danych do trenowania modeli uczenia maszynowego \u2014 pracowa\u0142em z bibliotekami NumPy, Pandas i Scikit-learn. Rozumiem zasady konteneryzacji w Dockerze. Mam tak\u017ce du\u017ce do\u015bwiadczenie z relacyjnymi bazami danych: potrafi\u0119 projektowa\u0107 z\u0142o\u017cone architektury dla konkretnych zada\u0144, w tym z u\u017cyciem PostgreSQL, z zachowaniem zasad normalizacji i skalowalno\u015bci.",infoLanguagesContent:"Pos\u0142uguj\u0119 si\u0119 biegle j\u0119zykiem rosyjskim, poniewa\u017c jest on moim j\u0119zykiem ojczystym. Angielskiego ucz\u0119 si\u0119 od kilku lat \u2014 obecnie na poziomie B2. Czytam literatur\u0119 techniczn\u0105, komunikuj\u0119 si\u0119 w tematach zawodowych i dalej rozwijam praktyk\u0119 konwersacji. Nauka j\u0119zyk\xf3w sprawia mi przyjemno\u015b\u0107, a w planach mam podniesienie angielskiego do poziomu C1+/C2 oraz rozpocz\u0119cie nauki kolejnego j\u0119zyka obcego.",tableHeaderTechnology:"Technologie",tableHeaderKnowledge:"Wiedza",projectsFrontendPrintiqueApp:"PrintiqueApp to nowoczesna platforma webowa oparta na React/Next.js z TypeScript i Shadcn UI, wzbogacona interaktywn\u0105 wizualizacj\u0105 3D produkt\xf3w za pomoc\u0105 React-Three-Fiber. Inspirowana zasadami \u201ezielonej gospodarki\u201d, us\u0142uga druku na \u017c\u0105danie minimalizuje odpady. Model d\u0142ugiego ogona umo\u017cliwia zaoferowanie klientom szerokiego asortymentu unikalnych produkt\xf3w \u2014 podobnie jak Amazon na rynkach niszowych. UI zbudowano z elastycznych i konfigurowalnych komponent\xf3w Shadcn UI. Wizualizacja 3D realizowana jest w React-Three-Fiber, kt\xf3ry umo\u017cliwia deklaratywne tworzenie scen i obiekt\xf3w, optymalnie wsp\xf3\u0142pracuj\u0105cych z ekosystemem React. Dzi\u0119ki temu u\u017cytkownicy mog\u0105 wizualnie przegl\u0105da\u0107 modele produkt\xf3w przed zakupem. Architektura przewiduje skalowalno\u015b\u0107, responsywno\u015b\u0107 i bezproblemow\u0105 integracj\u0119 z API druku i dostawy. Deployment odbywa si\u0119 na Vercel z pe\u0142n\u0105 automatyzacj\u0105 CI/CD.",projectsFrontendTelephonyApp:"Telephony to wydajna, wieloplatformowa aplikacja desktopowa oparta na Electron.js, stworzona z wykorzystaniem React, DevExtreme React i Material\xa0UI. Struktura aplikacji jest zoptymalizowana za pomoc\u0105 Redux Toolkit (RTK) dla niezawodnego zarz\u0105dzania stanem, a komunikacja z zdalnymi maszynami odbywa si\u0119 przez po\u0142\u0105czenia WebSocket, kt\xf3re zapewniaj\u0105 natychmiastow\u0105 wymian\u0119 polece\u0144 i danych. Wbudowany klient VNC umo\u017cliwia operatorom bezpieczne zarz\u0105dzanie zdalnymi pulpitami w czasie rzeczywistym, a modu\u0142 audio-wideo obs\u0142uguje po\u0142\u0105czenia w Skype, Telegram i MicroSIP, oferuj\u0105c nagrywanie rozm\xf3w, monitorowanie na \u017cywo, transmisj\u0119 g\u0142osu operatora i przechowywanie archiw\xf3w audio-wideo. System logowania rejestruje szczeg\xf3\u0142owe dane ka\u017cdego po\u0142\u0105czenia, dostarczaj\u0105c elastyczne raporty i pulpity statystyk dotycz\u0105ce operator\xf3w, kana\u0142\xf3w komunikacji i czasu trwania sesji. Bezpiecze\u0144stwo zapewnia uwierzytelnianie JWT: po zalogowaniu wszystkie kolejne \u017c\u0105dania s\u0105 weryfikowane tokenem. Administracja realizowana jest przez model r\xf3l: mo\u017cna tworzy\u0107 dowolne role, konfigurowa\u0107 uprawnienia na poziomie funkcji i zasob\xf3w oraz rejestrowa\u0107 nowych u\u017cytkownik\xf3w zgodnie z politykami firmy. Telephony \u0142\u0105czy wysok\u0105 wydajno\u015b\u0107, skalowalno\u015b\u0107 i bezpiecze\u0144stwo, oferuj\u0105c operatorom jednolity interfejs do pe\u0142nej kontroli nad sieci\u0105 zdalnych maszyn.",projectsBackendTelephonyDemoApi:"Telephony Demo API to lekka us\u0142uga backendowa zaimplementowana w Next.js (API Routes) i wdro\u017cona na Vercel, stworzona specjalnie dla wersji demonstracyjnej klienta. Serwer s\u0142u\u017cy wizualnej prezentacji mo\u017cliwo\u015bci systemu i obs\u0142uguje podstawowe scenariusze uwierzytelniania oraz pracy z danymi. Uwierzytelnianie odbywa si\u0119 przez login i has\u0142o z wydawaniem token\xf3w JWT, kt\xf3re s\u0142u\u017c\u0105 do walidacji wszystkich kolejnych \u017c\u0105da\u0144. Zapewnia to prosty, ale niezawodny mechanizm zabezpiecze\u0144 i imituje dzia\u0142anie pe\u0142noprawnego korporacyjnego API. Dost\u0119p do bazy danych organizowany jest przez Prisma ORM, co pozwala efektywnie zarz\u0105dza\u0107 danymi i utrzymywa\u0107 czyst\u0105, typowan\u0105 struktur\u0119 modelu. API obs\u0142uguje g\u0142\xf3wne operacje: logowanie, pobieranie danych u\u017cytkownika i dost\u0119p do encji demonstracyjnych odzwierciedlaj\u0105cych rzeczywist\u0105 logik\u0119 systemu. Us\u0142uga koncentruje si\u0119 na prostocie, szybkiej reakcji i stabilno\u015bci w warunkach demonstracyjnych, oferuj\u0105c izolowane \u015brodowisko do testowania i prezentacji bez zale\u017cno\u015bci od produkcji.",projectsBackendTelephonyServer:"Telephony (Backend) to cz\u0119\u015b\u0107 serwerowa aplikacji napisana w Javie z u\u017cyciem Spring\xa0Boot\xa03, Spring Web, Spring Data JPA i PostgreSQL. Zapewnia obs\u0142ug\u0119 \u017c\u0105da\u0144 od frontendu, zarz\u0105dza logik\u0105 biznesow\u0105 i wsp\xf3\u0142pracuje z baz\u0105 danych. Do tworzenia dynamicznych, typowanych zapyta\u0144 SQL wykorzystuje si\u0119 QueryDSL, a wersjonowanie i automatyzacj\u0119 migracji bazy danych realizuje Liquibase. Uwierzytelnianie opiera si\u0119 na JWT, co pozwala bezpiecznie zarz\u0105dza\u0107 sesjami: po zalogowaniu wszystkie \u017c\u0105dania API s\u0105 weryfikowane tokenem. Wdro\u017cono elastyczny model r\xf3l \u2014 serwer obs\u0142uguje tworzenie r\xf3l, przypisywanie uprawnie\u0144 i rejestracj\u0119 u\u017cytkownik\xf3w zgodnie z ich uprawnieniami. Backend podzielony jest na kontrolery REST, serwisy i repozytoria, co zapewnia przejrzyst\u0105 architektur\u0119 i u\u0142atwia utrzymanie. Serwer dzia\u0142a stabilnie pod obci\u0105\u017ceniem i tworzy solidn\u0105 podstaw\u0119 dla wszystkich funkcji aplikacji klienckiej.",projectsBackendTelephonyRemoteTerminal:"Telephony Service to wieloplatformowy komponent serwisowy instalowany na zdalnych terminalach, opracowany w C# z .NET\xa08. Us\u0142uga zapewnia pe\u0142n\u0105 kontrol\u0119 nad aplikacjami u\u017cytkownika (MicroSIP, Skype, Telegram) i realizuje dwukierunkow\u0105 komunikacj\u0119 z aplikacj\u0105 klienck\u0105 przez WebSocket, implementowany za pomoc\u0105 biblioteki Fleck. Funkcjonalno\u015b\u0107 obejmuje automatyzacj\u0119 UI za pomoc\u0105 FlaUI, przechwytywanie i transmisj\u0119 audio z wykorzystaniem NAudio \u2014 us\u0142uga przesy\u0142a strumie\u0144 d\u017awi\u0119ku z terminala i odbiera g\u0142os operatora do dalszej dystrybucji. Dodatkowo realizuje nagrywanie wideo i audio ekranu oraz mikrofonu przy u\u017cyciu ScreenRecorderLib, z mo\u017cliwo\u015bci\u0105 przesy\u0142ania i przechowywania tych danych. Wbudowany system rozpoznawania mowy oparty na Vosk dzia\u0142a w czasie rzeczywistym, transkrybuj\u0105c g\u0142os u\u017cytkownika i okresowo wysy\u0142aj\u0105c fragmenty tekstu do operatora oraz zapisuj\u0105c je w bazie danych. Us\u0142uga gwarantuje stabilne dzia\u0142anie w czasie rzeczywistym, minimalne op\xf3\u017anienia w transmisji i niezawodn\u0105 interakcj\u0119 z klientem, tworz\u0105c technologiczn\u0105 podstaw\u0119 dla zdalnej kontroli i komunikacji."}}}]);